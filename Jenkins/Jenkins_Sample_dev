pipeline {
  agent {
    label 'jenkins-k8s-slave' 
  }
  
environment{
PYTHON_PATH='${WORKSPACE}'
access_token = credentials('Github_access_token')
ENVIRONMENT='pecten_dataset_dev'
MYSQL_CONNECTION_STRING=credentials('connection_string')
BUCKET_NAME='pecten-duplication-development'

}

  stage('Install pip dependencies') {
        steps {
          sh 'pip3 install --upgrade virtualenv'
          sh 'python3 -m venv ${WORKSPACE}'
          sh 'bash -c "source ${WORKSPACE}/bin/activate && apt-get update -y && cat ${WORKSPACE}/packages.txt | xargs apt-get install && pip install wheel && pip3 install -r ${WORKSPACE}/pecten_collection/analyst_rating/jenkins/requirements.txt && git clone https://$access_token@github.com/igenieconsulting/pecten_utils.git && cd ${WORKSPACE}/pecten_utils && pip3 install -r requirements.txt && pip3 install -e."'

        }
    }

  stage('run automatic code review') {
      steps {
        withCredentials([file(credentialsId: 'pecten-google-sa-credential', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
       
	sh 'echo "$GOOGLE_SA_CRENTIAL"'
        sh ". ${WORKSPACE}/bin/activate && python3 ${WORKSPACE}/CICDPipelineSample/automatic_code_review.py" }
      }
    }
  }
  
   stage('run Unit Test') {
      steps {
        withCredentials([file(credentialsId: 'pecten-google-sa-credential', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
       
	sh 'echo "$GOOGLE_SA_CRENTIAL"'
        sh ". ${WORKSPACE}/bin/activate && python3 ${WORKSPACE}/CICDPipelineSample/unittest/ut_Sample_dev.py" }
      }
    }
  }
  
 
}
